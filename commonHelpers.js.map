{"version":3,"file":"commonHelpers.js","sources":["../src/js/storage/favorites.js","../src/js/helper/clear-element.js","../src/js/dom/create-exercises-markup.js","../src/js/dom/favorites.js"],"sourcesContent":["const FAVORITES_KEY = 'favorite-exercises';\n\nconst addToFavorites = exerciseObject => {\n  const favorites = localStorage.getItem(FAVORITES_KEY);\n\n  if (favorites) {\n    const parsedFavorites = JSON.parse(favorites);\n    const newFavorites = [\n      ...parsedFavorites.filter(f => f._id !== exerciseObject._id),\n      exerciseObject,\n    ];\n    localStorage.setItem(FAVORITES_KEY, JSON.stringify(newFavorites));\n  } else {\n    localStorage.setItem(FAVORITES_KEY, JSON.stringify([exerciseObject]));\n  }\n};\n\nconst removeFromFavorites = removeId => {\n  const favorites = localStorage.getItem(FAVORITES_KEY);\n  if (favorites) {\n    const parsedFavorites = JSON.parse(favorites);\n    const filteredFavorites = parsedFavorites.filter(f => f._id !== removeId);\n    localStorage.setItem(FAVORITES_KEY, JSON.stringify(filteredFavorites));\n  }\n};\n\nconst getAllFavorites = () => {\n  const favorites = localStorage.getItem(FAVORITES_KEY);\n  if (favorites) {\n    return JSON.parse(favorites);\n  }\n  return [];\n};\n\nconst isFavorite = checkId => {\n  const favorites = localStorage.getItem(FAVORITES_KEY);\n  if (favorites) {\n    const parsedFavorites = JSON.parse(favorites);\n    return parsedFavorites.some(f => f._id === checkId);\n  }\n  return false;\n};\n\nexport const favoritesStorage = {\n  add: addToFavorites,\n  remove: removeFromFavorites,\n  getAll: getAllFavorites,\n  isFavorite,\n};\n","// Clear input field of selected element\nexport default function clearElement(element) {\n  if (element.value) {\n    element.value = '';\n    return;\n  }\n  // Show error if function didn't receive input element\n  console.error('function clearElement:', 'Only works with input elements');\n}\n","import { refs } from '../refs';\n\nimport clearElement from '../helper/clear-element';\n\nexport default function createExercisesMarkup(element, apiResponse) {\n  // Clear list in DOM before each request\n  element.innerHTML = '';\n  // Check if data received\n  if (!apiResponse) {\n    // Clear input if nothing found\n    clearElement(refs.searchInputElement);\n    // Insert message in UI\n    element.insertAdjacentHTML(\n      'afterbegin',\n      `<li class=\"list-item-error\">\n        We haven't found exercises. Please try another search term\"\n    </li>`\n    );\n    return;\n  }\n  // Create exercises list markup\n  const exercisesMarkup = apiResponse.results\n    .map(\n      ({\n        _id,\n        bodyPart,\n        target,\n        rating,\n        burnedCalories,\n        time,\n        name,\n      }) => `<li id=\"${_id}\" class=\"exercise-item\">\n    <div class=\"exercise-top-container\">\n      <div class=\"exercise-top-info\">\n        <p class=\"exercise-tag\">Workout</p>\n        <p class=\"exercise-rating\">\n          ${rating}\n          <svg class=\"rating-icon\">\n            <use href=\"images/svg/icons.svg#icon-star-yellow\"></use>\n          </svg>\n        </p>\n      </div>\n      <button type=\"menu\" class=\"exercise-start-button\">\n        Start\n        <svg class=\"button-icon icon-arrow\">\n          <use href=\"images/svg/icons.svg#icon-arrow\"></use>\n        </svg>\n      </button>\n    </div>\n    <div class=\"exercise-title-container\">\n      <span class=\"exercise-icon-container\">\n        <svg class=\"exercise-icon\">\n          <use href=\"images/svg/icons.svg#icon-man\"></use>\n        </svg>\n      </span>\n      <h3 class=\"exercise-title\">${name}</h3>\n    </div>\n    <div class=\"exercise-bottom-container\">\n      <p class=\"exercise-info\">\n        Burned calories: <mark class=\"exercise-marked-text\">${burnedCalories} / ${time} min</mark>\n      </p>\n      <p class=\"exercise-info\">\n        Body part: <mark class=\"exercise-marked-text exercise-info-text\">${bodyPart}</mark>\n      </p>\n      <p class=\"exercise-info\">\n        Target: <mark class=\"exercise-marked-text exercise-info-text\">${target}</mark>\n      </p>\n    </div>\n  </li>`\n    )\n    .join('');\n\n  // Insert list after the container open tag\n  element.insertAdjacentHTML('afterbegin', exercisesMarkup);\n}\n","import { favoritesStorage } from '../storage/favorites';\n\nimport createExercisesMarkup from './create-exercises-markup';\nimport { refs } from '../refs';\n\nconst favoriteExercises = favoritesStorage.getAll();\n\ncreateExercisesMarkup(refs.containerFavorites, { results: favoriteExercises });\n"],"names":["FAVORITES_KEY","addToFavorites","exerciseObject","favorites","newFavorites","f","removeFromFavorites","removeId","filteredFavorites","getAllFavorites","isFavorite","checkId","favoritesStorage","clearElement","element","createExercisesMarkup","apiResponse","refs","exercisesMarkup","_id","bodyPart","target","rating","burnedCalories","time","name","favoriteExercises"],"mappings":"wHAAA,MAAMA,EAAgB,qBAEhBC,EAAiBC,GAAkB,CACvC,MAAMC,EAAY,aAAa,QAAQH,CAAa,EAEpD,GAAIG,EAAW,CAEb,MAAMC,EAAe,CACnB,GAFsB,KAAK,MAAMD,CAAS,EAEvB,OAAOE,GAAKA,EAAE,MAAQH,EAAe,GAAG,EAC3DA,CACN,EACI,aAAa,QAAQF,EAAe,KAAK,UAAUI,CAAY,CAAC,CACpE,MACI,aAAa,QAAQJ,EAAe,KAAK,UAAU,CAACE,CAAc,CAAC,CAAC,CAExE,EAEMI,EAAsBC,GAAY,CACtC,MAAMJ,EAAY,aAAa,QAAQH,CAAa,EACpD,GAAIG,EAAW,CAEb,MAAMK,EADkB,KAAK,MAAML,CAAS,EACF,OAAOE,GAAKA,EAAE,MAAQE,CAAQ,EACxE,aAAa,QAAQP,EAAe,KAAK,UAAUQ,CAAiB,CAAC,CACtE,CACH,EAEMC,EAAkB,IAAM,CAC5B,MAAMN,EAAY,aAAa,QAAQH,CAAa,EACpD,OAAIG,EACK,KAAK,MAAMA,CAAS,EAEtB,EACT,EAEMO,EAAaC,GAAW,CAC5B,MAAMR,EAAY,aAAa,QAAQH,CAAa,EACpD,OAAIG,EACsB,KAAK,MAAMA,CAAS,EACrB,KAAKE,GAAKA,EAAE,MAAQM,CAAO,EAE7C,EACT,EAEaC,EAAmB,CAC9B,IAAKX,EACL,OAAQK,EACR,OAAQG,EACR,WAAAC,CACF,EC/Ce,SAASG,EAAaC,EAAS,CAC5C,GAAIA,EAAQ,MAAO,CACjBA,EAAQ,MAAQ,GAChB,MACD,CAED,QAAQ,MAAM,yBAA0B,gCAAgC,CAC1E,CCJe,SAASC,EAAsBD,EAASE,EAAa,CAIlE,GAFAF,EAAQ,UAAY,GAEhB,CAACE,EAAa,CAEhBH,EAAaI,EAAK,kBAAkB,EAEpCH,EAAQ,mBACN,aACA;AAAA;AAAA,UAGN,EACI,MACD,CAED,MAAMI,EAAkBF,EAAY,QACjC,IACC,CAAC,CACC,IAAAG,EACA,SAAAC,EACA,OAAAC,EACA,OAAAC,EACA,eAAAC,EACA,KAAAC,EACA,KAAAC,CACR,IAAY,WAAWN,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA,YAKdG,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAmBiBG,CAAI;AAAA;AAAA;AAAA;AAAA,8DAIuBF,CAAc,MAAMC,CAAI;AAAA;AAAA;AAAA,2EAGXJ,CAAQ;AAAA;AAAA;AAAA,wEAGXC,CAAM;AAAA;AAAA;AAAA,QAIzE,EACA,KAAK,EAAE,EAGVP,EAAQ,mBAAmB,aAAcI,CAAe,CAC1D,CCrEA,MAAMQ,EAAoBd,EAAiB,SAE3CG,EAAsBE,EAAK,mBAAoB,CAAE,QAASS,CAAiB,CAAE"}